#!/bin/bash

# Useful info found at http://www.linuxjournal.com/content/more-using-bash-complete-command

`docker run --volume /tmp:/tmp semtech/mu-cli bash ensure-files.sh &`

# I use variables that start with retval to indicate that they are only used to
# populate the return value for the function whose name is the second part of the
# variable name
retval_get_image_list=""
retval_get_repository_list=()
retval_get_tags_for_image=""

get_image_list() {
    retval_get_image_list=""
    get_repository_list
    for repository_name in $(echo $retval_get_repository_list); do
        repo_image_list=$(</tmp/musemtech/$repository_name.images)
        retval_get_image_list="$retval_get_image_list $repo_image_list"
    done
}

get_repository_list() {
    retval_get_repository_list=()

    # should be done for each repository name
    repository="http://identifier"
    repository_name="${repository//https:\/\/}"
    repository_name="${repository_name//http:\/\/}"
    retval_get_repository_list+=($repository_name)
}

get_tags_for_image() {
    image_name=$1
    retval_get_tags_for_image=""
    for filename in $(find /tmp/musemtech/ -name "*.$image_name.tags"); do
        tags_in_file=$(<$filename)
        retval_get_tags_for_image="$retval_get_tags_for_images $tags_in_file"
    done
}

mu_complete() {
    local cmd="${1##*/}"
    local word=${COMP_WORDS[COMP_CWORD]}
    local line=${COMP_LINE}
    local words=($line) # split line into words
    local lastchar="${line: -1}"
    local wordcount=${#words[@]}

    # echo "Words is ${words[0]},${words[1]},${words[2]},${words[3]},${words[4]} !!"

    # echo "Word two is '${words[2]}'"

    case ${words[1]} in
        project)
            case ${words[2]} in
                new)
                    ;;
                doc)
                    ;;
                add)
                    case ${words[3]} in
                        service)
                            if (( COMP_CWORD > 4 )); then
                                IMAGE=${words[4]}
                                get_tags_for_image $IMAGE
                                 COMPREPLY=(`compgen -W "$retval_get_tags_for_image" $word`)
                            else
                                get_image_list
                                 COMPREPLY=(`compgen -W "$retval_get_image_list" $word`)
                            fi
                            ;;
                        *)
                            COMPREPLY=(`compgen -W "service" $word`)
                            ;;
                    esac
                    ;;
                *)
                    COMPREPLY=(`compgen -W "new doc add" $word`)
                    ;;
            esac
            ;;
        service)
            case ${words[2]} in
                new)
                    case ${words[3]} in
                        ruby)
                            ;;
                        javascript)
                            ;;
                        *)
                            COMPREPLY=(`compgen -W "ruby javascript" $word`)
                            ;;
                    esac
                    ;;
                snippet)
                    case ${words[3]} in
                        compose)
                        ;;
                        creation)
                        ;;
                        development)
                        ;;
                        *)
                            COMPREPLY=(`compgen -W "compose creation development" $word`)
                            ;;
                    esac
                    ;;
                *)
                    COMPREPLY=(`compgen -W "new" $word`)
                    ;;
            esac
            ;;
        migration)
            case ${words[2]} in
                new)
                    ;;
                *)
                COMPREPLY=(`compgen -W "new" $word`)
            esac
            ;;
        start)
            case ${words[2]} in
                dev)
                ;;
                *)
                    COMPREPLY=(`compgen -W "dev" $word`)
            esac
            ;;
        *)
            COMPREPLY=(`compgen -W "project service script start logs" $word`)
            ;;
    esac
}

complete -F mu_complete mu
